@page "/register"

@inject IAuthenticationService authenticationService
@inject NavigationManager navigationManager

<div class="container">
    <div class="p-3 row justify-content-center">
        <div class="p-4 text-center shadow card col-md-6 col-lg-6">
            <div class="px-5 card-body">
                <i class="mb-4 fas fa-book-reader fa-3x"></i>
                <div class="mb-4 title-text">Bookworms Lending Library</div>
                <div class="mb-4 link-text">
                    <a href="/login">Already have an account? Click here to login</a>
                </div>
                <EditForm Model="RegisterModel" OnValidSubmit="HandleRegistration">
                    <DataAnnotationsValidator />
                    <div class="mb-4 form-group">
                        <InputText Id="displayName" class="form-control" @bind-Value="RegisterModel.DisplayName" Placeholder="Your Name" />
                        <ValidationMessage For="@(() => RegisterModel.DisplayName)" />
                    </div>
                    <div class="mb-4 form-group">
                        <InputText Id="email" class="form-control" @bind-Value="RegisterModel.Email" Placeholder="Email Address" />
                        <ValidationMessage For="@(() => RegisterModel.Email)" />
                    </div>
                    <div class="mb-4 form-group">
                        <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterModel.Password" Placeholder="Password" />
                        <ValidationMessage For="@(() => RegisterModel.Password)" />
                    </div>
                    <div class="mb-4 form-group">
                        <InputText Id="confirmPassword" type="password" class="form-control" @bind-Value="RegisterModel.ConfirmPassword" Placeholder="Confirm Password" />
                        <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" />
                    </div>
                    <div class="mb-4">
                        <button type="submit" class="btn btn-secondary btn-block">Register</button>
                    </div>
                </EditForm>
                @if (ShowErrors)
                {
                    <div class="mt-4 alert alert-danger w-100" role="alert">
                        @foreach (var error in Errors)
                        {
                            @error
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterModel RegisterModel = new RegisterModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors;

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await authenticationService.Register(RegisterModel);

        if (result.Successful)
        {
            navigationManager.NavigateTo("/login?register=true", forceLoad: true);
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }
}
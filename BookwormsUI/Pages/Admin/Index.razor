@page "/admin/"

@using BookwormsUI.Components.Auth
@using BookwormsUI.Components.Admin
@using BookwormsUI.Extensions
@inject RequestService requestService
@inject IToastService toastService

<AuthGuard RolesAllowed="Administrator" />

<h4 class="mb-5 ml-2">Bookworms Library Admin Dashboard</h4>

<div class="container admin-section">
    <div class="p-2 row">
        <div class="p-3 text-center shadow card bg-light col-md-3 col-lg-3">
            <div class="px-2 card-body">
                <div class="mb-3 admin-heading-text">Registrations</div>
                <div class="mb-3">New registrations allowed (No/Yes)?</div>
                <div class="custom-control custom-switch">
                    <input type="checkbox" class="custom-control-input" id="allow-registrations" checked=@NewRegistrationsAllowed disabled>
                    <label class="custom-control-label" for="allow-registrations"></label>
                </div>
            </div>
        </div>
        <div class="p-3 text-center shadow card bg-light col-md-8 offset-md-1 col-lg-8">
            <div class="px-2 card-body">
                <div class="mb-3 admin-heading-text">Site Status</div>
                <div class="d-flex flex-direction-row justify-content-between px-4">
                    <SiteStatus />
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container admin-section">
    <div class="p-2 row">
        <div class="p-3 text-center shadow card col-md-12 col-lg-12">
            <div class="px-2 card-body">
                <div class="mb-3 admin-heading-text">Book Loans</div>
                <nav id="loans-nav">
                    <div class="nav nav-tabs" id="nav-tab" role="tablist">
                        <a class="nav-link active" id="nav-pending-tab" data-toggle="tab" href="#nav-pending" role="tab">Pending</a>
                        <a class="nav-link" id="nav-outstanding-tab" data-toggle="tab" href="#nav-outstanding" role="tab">Outstanding</a>
                        <a class="nav-link" id="nav-overdue-tab" data-toggle="tab" href="#nav-overdue" role="tab">Overdue</a>
                    </div>
                </nav>
                <div class="tab-content" id="nav-tabContent">
                    <div class="tab-pane fade show active" id="nav-pending" role="tabpanel">

                        @if (ShowErrors)
                        {
                            <div class="alert alert-danger" role="alert">
                                <p>@Error</p>
                            </div>
                        }

                        @if (pendingRequests == null)
                            {
                                <div>
                                    <h5>No pending requests found</h5>
                                </div>
                            }
                            else
                            {
                                <div class="mt-3">
                                    <table class="table table-responsive">
                                        <thead>
                                            <tr>
                                                <th>Borrower</th>
                                                <th>Title</th>
                                                <th>Author</th>
                                                <th>Status</th>
                                                <th>Date Requested</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var request in pendingRequests)
                                            {
                                            <tr>
                                                <td>@request.BorrowerEmail</td>
                                                <td>@request.BookTitle</td>
                                                <td>@request.BookAuthor</td>
                                                <td>@request.Status</td>
                                                <td>@request.DateRequested.ToUKStandardDate()</td>
                                                <td>
                                                    <button class="btn btn-success btn-sm" 
                                                        @onclick="@(() => MarkAsSent(request.Id))">Mark as Sent
                                                    </button>
                                                </td>
                                            </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                    </div>
                    <div class="tab-pane fade" id="nav-outstanding" role="tabpanel">
                        Outstanding book loans will appear here
                    </div>
                    <div class="tab-pane fade" id="nav-overdue" role="tabpanel">
                        Overdue book loans will appear here
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container admin-section">
    <div class="p-2 row">
        <div class="p-3 text-center shadow card bg-light col-md-12 col-lg-12">
            <div class="px-2 card-body">
                <div class="mb-3 admin-heading-text">Site Maintenance</div>
                <div class="maintenance-container">

                    <div class="mb-3 p-4 card bg-light maintenance-subsection">
                        <h5>Books</h5>
                        <div class="mt-2">
                            <NavLink href="/admin/books/add" role="button">
                                <button class="btn btn-outline-dark btn-sm" type="button">
                                    Add a Book
                                </button>
                            </NavLink>
                            <NavLink href="/books/" role="button">
                                <button class="btn btn-outline-dark btn-sm" type="button">
                                    Update a Book
                                </button>
                            </NavLink>
                        </div>
                        <div class="mt-2">
                            <NavLink href="/admin" role="button" >
                                <button class="btn btn-outline-dark btn-sm" type="button" disabled>
                                    De-activate/Re-activate a Book
                                </button>
                            </NavLink>
                        </div>
                    </div>
                    
                    <div class="mb-3 p-4 card bg-light maintenance-subsection">
                        <h5>Authors</h5>
                        <div class="mt-2">
                            <NavLink href="/admin/authors/add" role="button">
                                <button class="btn btn-outline-dark btn-sm" type="button">
                                    Add an Author
                                </button>
                            </NavLink>
                            <NavLink href="/authors/" role="button">
                                <button class="btn btn-outline-dark btn-sm" type="button">
                                    Update an Author
                                </button>
                            </NavLink>
                        </div>
                        <div class="mt-2">
                            <NavLink href="/admin" role="button">
                                <button class="btn btn-outline-dark btn-sm" type="button" disabled>
                                    De-activate/Re-activate an Author
                                </button>
                            </NavLink>
                        </div>
                    </div>

                    <div class="mb-3 p-4 card bg-light maintenance-subsection">
                        <h5>Categories</h5>
                        <div class="mt-2">
                            <NavLink href="/admin/" role="button">
                                <button class="btn btn-outline-dark btn-sm" type="button" disabled>
                                    Add a Category
                                </button>
                            </NavLink>
                            <NavLink href="/admin/" role="button">
                                <button class="btn btn-outline-dark btn-sm" type="button" disabled>
                                    Update a Category
                                </button>
                            </NavLink>
                        </div>
                        <div class="mt-2">
                            <NavLink href="/admin" role="button">
                                <button class="btn btn-outline-dark btn-sm" type="button" disabled>
                                    De-activate/Re-activate a Category
                                </button>
                            </NavLink>
                        </div>
                    </div>
                    
                    <div class="mb-3 p-4 card bg-light maintenance-subsection">
                        <h5>Image Upload Test</h5>
                        <div class="mt-2">
                            <NavLink href="/upload-test/" role="button">
                                <button class="btn btn-outline-dark btn-sm" type="button">
                                    Image Upload Test
                                </button>
                            </NavLink>
                        </div>
                        <div class="mt-2">
                            <NavLink href="/admin" role="button">
                                <button class="btn btn-outline-dark btn-sm" type="button" disabled>
                                    View Orphaned Image Report
                                </button>
                            </NavLink>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Request> pendingRequests;

    [CascadingParameter] 
    public IModalService Modal { get; set; }

    private bool ShowErrors;
    private string Error = "";

    [Inject]
    public IConfiguration config { get; set; }

    private bool NewRegistrationsAllowed;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetPendingRequests();
            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
        showNewRegistrationsAllowed();
    }
    
    private async Task GetPendingRequests()
    {
        pendingRequests = await requestService.GetRequestsByStatusAsync(RequestStatus.Pending);
    }

    private async Task MarkAsSent(int requestId)
    {
        // first, get confirmation via a modal
        var parameters = new ModalParameters();
        parameters.Add(nameof(ConfirmModal.Message), "This will start the borrower's lending period");

        parameters.Add(nameof(ConfirmModal.ConfirmButtonText), "Yes, confirm");
        parameters.Add(nameof(ConfirmModal.CancelButtonText), "No, cancel");

        var confirmModal = Modal.Show<ConfirmModal>("Are you sure?", parameters);
        var result = await confirmModal.Result;

        // user confirmed, proceed with the update
        if (!result.Cancelled) // user must have clicked confirm button
        {
            var updateResponse = await requestService.UpdateRequestStatusAsync(requestId, RequestStatus.Sent);

            if (updateResponse.Successful)
            {
                ShowErrors = false;
                toastService.ShowSuccess("This book request has been marked as sent", "Book Sent");
                await GetPendingRequests();
            }
            else 
            {
                ShowErrors = true;
                Error = updateResponse.Error;
            }
        }
    }

    private void showNewRegistrationsAllowed()
    {
        NewRegistrationsAllowed = config.GetValue<bool>("AllowNewRegistrations");
    }
}

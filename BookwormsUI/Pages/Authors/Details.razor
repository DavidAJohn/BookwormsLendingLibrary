@page "/authors/details/{Id}"

@inject IAuthorRepository authorRepo
@inject AuthorService authorService
@inject NavigationManager navigationManager
@inject SettingsService settings

@if (author == null)
{
    <LoadingMessage Message="Loading author details..." />
}
else
{
    @if (CurrentUrl != null)
    {
        <div>
            <BreadcrumbHeader CurrentUrl=@CurrentUrl />
        </div>
    }

    <div class="container mt-4">
        <div class="row">
            <div class="col-md-4">
                <img 
                    src="@($"{(!String.IsNullOrEmpty(author.AuthorImageUrl) ? author.AuthorImageUrl : AssetBaseUrl + "/authors/author_image.png")}")"  
                    style="width:300px;max-height:500px;"
                />
            </div>
            <div class="ps-3 col-md-8">
                <div class="author-details">
                    <div class="author-name">
                        @author.FirstName @author.LastName
                    </div>
                    <div class="author-biography">
                        @author.Biography
                    </div>
                </div>
            </div>
        </div>
        <div class="mt-5 row">
            <div class="col-md-4">
                &nbsp;
            </div>
            <div class="col-md-8">
                <h4>Books:</h4>
                @if (author.Books == null || author.Books.Count < 1)
                {
                    <div>
                        <strong>We do not currently have any of this author's books available</strong>
                    </div>
                }
                else
                {
                    <div>
                        <ul class="book-list">
                            @foreach (var book in author.Books)
                            {
                                <li class="book-list-item">
                                    <NavLink href=@($"/books/details/{@book.Id}")>
                                        <img 
                                            src="@($"{(!String.IsNullOrEmpty(book.CoverImageUrl) ? book.CoverImageUrl : AssetBaseUrl + "/books/book_cover.png")}")" 
                                            class="book-thumbnail" 
                                        />
                                    </NavLink>
                                    <NavLink href=@($"/books/details/{@book.Id}")>
                                        @book.Title (@book.YearPublished)
                                    </NavLink>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>

        <button class="mt-4 btn btn-secondary" @onclick="BackToAuthors">
            <i class="fa fa-backward"></i>&nbsp;
            Back to List of Authors
        </button>

    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }
    private Author author = new Author();
    private string CurrentUrl;
    private string AssetBaseUrl;

    protected override async Task OnInitializedAsync()
    {
        int id = int.Parse(Id);
        var url = authorService.GetAuthorsApiEndpoint();
        author = await authorRepo.GetByIdAsync(url, id);

        CurrentUrl = navigationManager.Uri;

        AssetBaseUrl = settings.GetAssetBaseUrl();
    }

    private void BackToAuthors()
    {
        navigationManager.NavigateTo("/authors/");
    }

}

@page "/authors/"

@inject IAuthorRepository authorRepository
@inject AuthorService authorService
@inject NavigationManager navigationManager

@if (authors == null)
{
    <LoadingMessage Message="Loading authors..." />
}
else
{
    @if (authors.Count() < 1)
    {
        <h4>No authors currently listed</h4>
    }
    else
    {
        <div>
            <BreadcrumbHeader CurrentUrl=@CurrentUrl />
        </div>

        <h4>List of Authors</h4>

        <table class="table table-responsive">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var author in authors)
                {
                    <tr>
                        <td>@author.FirstName</td>
                        <td>@author.LastName</td>
                        <td>
                            <a class="btn btn-primary" href="/authors/details/@author.Id" >
                                <i class="fa fa-pencil-alt"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div>
            <Paging metadata="metadata" Spread="2" SelectedPage="SelectedPage" />
        </div>
    }
}

@code {
    private List<Author> authors;
    private string url;
    private PagingMetadata metadata;
    private ItemParameters itemParams = new ItemParameters();
    private string CurrentUrl;

    protected override async Task OnInitializedAsync()
    {
        await SelectedPage(1);

        // get current url from navigation manager to pass to breadcrumb component
        CurrentUrl = navigationManager.Uri;
    }

    private async Task SelectedPage(int page)
    {
        itemParams.PageIndex = page;
        url = authorService.GetAuthorsApiEndpoint();
        var response = await authorRepository.GetAsync(url, itemParams);

        authors = response.Items;
        metadata = response.Metadata;
    }
}

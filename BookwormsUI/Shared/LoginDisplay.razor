@using Microsoft.AspNetCore.Components.Authorization
@using BookwormsUI.Extensions
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IToastService ToastService
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        @if (@displayName != null)
        {
            <ul class="navbar-nav ms-auto">
                <li class="nav-item">
                    <NavLink class="nav-link static-nav-link">
                        Hi, @displayName
                    </NavLink>
                </li>
                @if (@role == "Administrator")
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="admin">
                            Admin Page
                        </NavLink>
                    </li>
                }
                else {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="account">
                            Your Account
                        </NavLink>
                    </li>
                }
                <li class="nav-item">
                    <NavLink class="nav-link" href="logout">
                        Log Out
                    </NavLink>
                </li>
            </ul>
        }
        else 
        {
            <span>&nbsp;</span>
        }
    </Authorized>
    <NotAuthorized>
        <ul class="navbar-nav ms-auto">
            <li class="nav-item">
                <NavLink class="nav-link" href="login">
                    Log In
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="register">
                    Register
                </NavLink>
            </li>
        </ul>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string displayName;
    private string role;

    protected override async Task OnInitializedAsync()
    {
        await GetClaimsPrincipalData();
    }
    
    private async Task GetClaimsPrincipalData()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            ToastService.ShowSuccess("You have logged in successfully", "Logged In");
            displayName = user?.GetDisplayNameFromPrincipal();
            role = user?.GetRoleFromPrincipal();
        }
        else 
        {
            var queryStringParams = NavigationManager.GetQueryStringCollection();

            var logout = queryStringParams["logout"];
            var register = queryStringParams["register"];

            if (logout == "true")
            {
                ToastService.ShowInfo("You have now logged out", "Logged Out");
            }

            if (register == "true")
            {
                ToastService.ShowSuccess("Thanks for registering with Bookworms", "Welcome!");
            }
        }
    }
}
